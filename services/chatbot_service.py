from .workflow_factory import WorkflowFactory


class ChatbotService:
    """
    Chatbot service that handles user requests and delegates them to the appropriate workflow.

    This service is responsible for processing user inputs and managing the workflow
    creation through the WorkflowFactory. It ensures that the correct workflow is
    instantiated based on the specified workflow type and that the user's input is
    processed accordingly.

    Attributes:
        workflow_factory (WorkflowFactory): An instance of WorkflowFactory used to create workflows.
    """

    def __init__(self):
        """
        Initialize the ChatbotService.

        This constructor initializes the WorkflowFactory instance, which is used to create
        workflows for processing user requests.
        """
        self.workflow_factory = WorkflowFactory()

    async def process_request(
        self,
        user_input: str,
        workflow_type: str,
    ) -> str:
        """
        Process the user request by creating the appropriate workflow and executing it.

        Args:
            user_input (str): The input provided by the user that needs to be processed.
            workflow_type (str): The type of workflow to be created for processing the request.

        Returns:
            str: The response generated by the workflow after processing the user input.

        Raises:
            ValueError: If the workflow type is invalid or not supported.
        """
        workflow = self.workflow_factory.create_workflow(workflow_type)
        return await workflow.execute_request_workflow(user_input)
